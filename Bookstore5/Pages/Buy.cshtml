@page
@model Bookstore5.Pages.BuyModel
@{
    // this is an MVVM (Model, View, ViewModel) method of building web pages UNLIKE MVC (Model, View, Controller). RazorPages are self-contained and do routing internally. This is still not the most common method, but probably will be in the future.
}

<h2>Your Cart</h2>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Project</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Subtotal</th>
        </tr>

    </thead>
    <tbody>
        @foreach (var line in Model.Cart.Lines) //pull cart lines
        {
            <tr>
                <td>@line.Book.Title</td>
                <td>@line.Quantity</td>
                <td>$@line.Book.Price</td>
                <td>$@(line.Quantity * line.Book.Price)</td>
                <td class="text-black-50 text-center">
                    <form asp-page-handler="Remove" method="post">
                        <input type="hidden" name="BookId"
                               value="@line.Book.BookId" />
                        <input type="hidden" name="returnUrl"
                               value="@Model.ReturnUrl" />
                        <button type="submit" class="btn btn-sm btn-danger">Remove</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="3">Total:</td>
            <td>@Model.Cart.ComputeTotalSum().ToString("c")</td> <!--Calculates the total sum and uses the ToString function to make it currency-->
        </tr>
    </tfoot>
</table>

<div class="text-center">
    <a class="btn btn-primary" href="@Model.ReturnUrl">Continue Shopping</a>
</div>